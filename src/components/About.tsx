import React, { Fragment } from "react";

const About = () => {
  return (
    <Fragment>
      <h1>実装方針</h1>
      <br />
      <br />
      <h5>Issues一覧ページ</h5>
      <br />
      <p>
        各ページを表示する時にGithubAPIに1ページ10エントリーのクエリパラメーターをつけてaxiosを使って情報を取得します。
      </p>
      <p>
        react-routerを使ってページ推移を実装しています。paginationコンポーネントのイベントハンドラーから親コンポーネントの関数を呼び出して、useHistoryでページ推移を実装しました。
      </p>
      <br />
      <br />
      <h5>Issues詳細ページ</h5>
      <br />
      <p>
        issue一覧ページで各issueのリンクをクリックするとissueの詳細ページへ推移します。この際issueをGithubAPIから取得しています。
      </p>
      <br />
      <br />
      <h5>Pagination UI</h5>
      <br />
      <p>
        Pagination
        UIで最後のページ番号が表示されるようにしたかったので、それを実現する関数を作りました。GithubAPIに総Issue数を取得する項目がなかったので、空の情報が返ってくるまでイテレーションをして末尾のページ番号を取得する関数です。
      </p>
      <p>
        これはリクエスト数がとても多くなるので、2回に分ける事でリクエスト数を減らしました。最初にでGithub
        REST
        APIに1ページ100エントリーのクエリパラメーターをつけて、空のレスポンスが返ってくるまでイテレーションします。
      </p>
      <p>
        実際のUIは1ページ10エントリーなので、さらに1ページ10エントリーのクエリパラメーターをつけて、さらにイテレーションします。そうすると最後のページがわかります。
      </p>
      <p>2回に分ける事でHTTPリクエストの総数を抑える事ができます。</p>
      <br />
      <br />
      <h5>その他</h5>
      <br />
      <p>
        APIから非同期に情報を取得する時に、取得が終わるまでの間にUIに情報が残るのが紛らわしかったので、非同期のプロセス中はローディングのGIFを表示しました。
      </p>
      <br />
      <br />
      <p>野老快南</p>
    </Fragment>
  );
};

export default About;
